# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ProfileModel {
  id: Float!
}

type PostWithTextModel implements PostBaseModel {
  id: Float
  profileID: Float
  profile: ProfileModel
  type: PostType
  totalShares: Float
  content: String
}

interface PostBaseModel {
  id: Float
  profileID: Float
  profile: ProfileModel
  type: PostType
  totalShares: Float
  content: String
}

enum PostType {
  Text
  Image
  Video
  Album
  SharedContent
}

type PostWithImageModel implements PostBaseModel {
  id: Float
  profileID: Float
  profile: ProfileModel
  type: PostType
  totalShares: Float
  content: String
  mediaID: Float
}

type PostWithVideoModel implements PostBaseModel {
  id: Float
  profileID: Float
  profile: ProfileModel
  type: PostType
  totalShares: Float
  content: String
  mediaID: Float
}

type PostWithAlbumModel implements PostBaseModel {
  id: Float
  profileID: Float
  profile: ProfileModel
  type: PostType
  totalShares: Float
  content: String
  mediaIDs: [Float!]
}

type PostWithSharedContentModel implements PostBaseModel {
  id: Float
  profileID: Float
  profile: ProfileModel
  type: PostType
  totalShares: Float
  content: String
  postID: Float
}

type Query {
  postFavoriteCount(filter: PostFilterByOneInput!): Float
  postReactionCount(filter: PostFilterByOneInput!): Float
  postShareCount(filter: PostFilterByOneInput!): Float
  post(filter: PostFilterByOneInput!): PostUnion!
  posts(filter: PostFilterByManyInput): [PostUnion!]!
}

input PostFilterByOneInput {
  id: Float!
}

union PostUnion = PostWithTextModel | PostWithImageModel | PostWithVideoModel | PostWithAlbumModel | PostWithSharedContentModel

input PostFilterByManyInput {
  ids: [Float!]
  profileIDs: [Float!]
}

type Mutation {
  postWithTextCreate(input: PostWithTextCreateInput!): PostWithTextModel!
  postWithImageCreate(input: PostWithImageCreateInput!): PostWithImageModel!
  postWithVideoCreate(input: PostWithVideoCreateInput!): PostWithVideoModel!
  postWithAlbumCreate(input: PostWithAlbumInput!): PostWithAlbumModel!
  postWithSharedContentCreate(input: PostWithSharedContentInput!): PostWithSharedContentModel!
  postDelete(filter: PostFilterByOneInput!): Boolean!
}

input PostWithTextCreateInput {
  content: String!
}

input PostWithImageCreateInput {
  mediaID: Float!
  content: String!
}

input PostWithVideoCreateInput {
  mediaID: Float!
  content: String!
}

input PostWithAlbumInput {
  mediaIDs: [Float!]!
  content: String!
}

input PostWithSharedContentInput {
  postID: Float!
  content: String!
}